<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CloudRun on ESCAPE FROM / iganari</title><link>https://iganari.github.io/categories/cloudrun/</link><description>Recent content in CloudRun on ESCAPE FROM / iganari</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 31 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://iganari.github.io/categories/cloudrun/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud Run の始めの一歩</title><link>https://iganari.github.io/blog/2020-12-31-first-cloudrun/</link><pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-12-31-first-cloudrun/</guid><description>本投稿は Serverless Advent Calendar 2020 の17日目です。
本投稿は Zenn の記事のアーカイブになります -&amp;gt; 本記事 Zenn: Cloud Run の始めの一歩
Cloud Run とは GCP が提供しているサーバレスサービスの一つであり、特徴としては「フルマネージドのサーバーレスプラットフォーム上で、スケーラブルなコンテナ化されたアプリケーションを開発し、デプロイが出来る」とのことです。
Cloud Run
また、類似サービスとしては Google App Engine(以下 App Engine) があります。
Cloud Run を使うメリット マイクロサービスの容易なデプロイ コンテナ化されたマイクロサービスをコマンド一つでデプロイでき、かつサービス毎に固有の構成をいちいち決めてからデプロイするなどの手間は不要である シンプルで統一的なデベロッパー エクスペリエンス 各マイクロサービスは、Cloud Run のデプロイ単位である Docker イメージとして実装される。 スケーラブルなサーバーレス実行 マネージド Cloud Run にデプロイされるマイクロサービスは、リクエスト数に応じて自動的にスケーリングします。 基盤となっている Kubernetes クラスタの構成や管理は開発者は意識する必要性はありません。 マネージド Cloud Run は、リクエストがない場合は 0 にスケーリングし、リソースを使用しません。 任意の言語で書かれたコードのサポート Cloud Run はコンテナをベースとしているので、任意の言語でコードを作成でき、任意のバイナリやフレームワークを使用できます。 とのことであり公式でも書いてありますが、兎にも角にもサーバレスの強みである「マネージドでスケーラブルなサーバレスプラットフォーム」がより表立ったサービスというわけでですね :)</description></item></channel></rss>