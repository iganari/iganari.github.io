<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ESCAPE FROM / iganari</title><link>https://iganari.github.io/</link><description>Recent content on ESCAPE FROM / iganari</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 18 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://iganari.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>イサキを捌きました &lt;ﾟ))>&lt;</title><link>https://iganari.github.io/blog/2020-07-18_cook-fish/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-07-18_cook-fish/</guid><description>魚について 近くのスーパーにてイサキが安く売っていたので、捌いてみました &amp;lt;ﾟ))&amp;gt;&amp;lt;
イサキは晩春から夏くらいが旬とされていて、刺身や煮付けで食べるのが一般的らしいです
参考: ぼうずコンニャクの市場魚介類図鑑/イサキ
魚の捌き方については下記を参考にさせて頂きました
参考: 【無修正】イサキのさばき方　三枚おろし➡お刺身➡実食まで
実際に捌いていった順 以下、 Twitter の投稿を貼っておきます
今から、イサキを捌いて行きます🐟 pic.twitter.com/Ic2qNONolC
&amp;mdash; iganari (@iganari_) July 18, 2020 鱗を取ります pic.twitter.com/pC26LYU3Eo
&amp;mdash; iganari (@iganari_) July 18, 2020 次にエラを取ります
(モノクロにしてますが耐性の無い方は注意です pic.twitter.com/LztU4nFBtb
&amp;mdash; iganari (@iganari_) July 18, 2020 頭を取ります
(※ pic.twitter.com/y59zuVYNew
&amp;mdash; iganari (@iganari_) July 18, 2020 卵がいました
(※ pic.twitter.com/WywfcoPGDO
&amp;mdash; iganari (@iganari_) July 18, 2020 血などを洗い流してきれいになりました pic.twitter.com/jzrHSfzDUO
&amp;mdash; iganari (@iganari_) July 18, 2020 キッチンロールでよく水気を取ります pic.</description></item><item><title>macOS から Raspberry Pi に画面共有したい</title><link>https://iganari.github.io/blog/2020-02-18_vnc-raspberrypi-from-macos.ja/</link><pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-02-18_vnc-raspberrypi-from-macos.ja/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/02/22/110953 macOS から Raspberry Pi に画面共有したい 結論 Raspberry Pi 側 初期状態から組み込まれている vncserver を使いましょう。 macOS 側 サードパーティ製の VNC クライアントを使いましょう。 https://www.realvnc.com/en/connect/download/viewer/ なお、公式のサポートも手軽に使えるよとコメントしています。 https://www.raspberrypi.org/forums/viewtopic.php?t=229348 Raspberry Pi 側 (LAN 内の IP アドレス = 192.168.202.118) VNC について確認しましょう。 $ sudo systemctl list-unit-files | grep vnc vncserver-virtuald.service disabled vncserver-x11-serviced.service disabled ---&amp;gt; vncserver-x11-serviced があることが確認出来ました。 vncserver-x11-serviced を起動し、自動起動を設定しましょう。 vncserver-x11-serviced の詳細は以下を参照してください。 https://help.</description></item><item><title>nodered-dockercompose を Node-RED v1.0.3 対応させました [日本語版]</title><link>https://iganari.github.io/blog/2020-02-07_update-nodered-container.ja/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-02-07_update-nodered-container.ja/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/02/07/084441 nodered-dockercompose ってそもそも何 ?? 自前の Repository です。 Docker Compose を用いて、 Node-RED (後述) をマシン上に構築することが出来ます。 https://github.com/iganari/nodered-dockercompose
今回は、Node-RED の v1 がリリースしたので、上記の Repository もアップデートしました。 (正確には v1.0.3 にアップデートしました。) Node-RED とは?? 公式サイト https://nodered.org/about/
どんなものか 公式ドキュメントから抜粋します。 Node-RED is a flow-based programming tool, originally developed by IBM’s Emerging Technology Services team and now a part of the JS Foundation. =============================== Node-RED はフローベースドプログラミング (flow-based programming) ツールであり、元は IBM Emerging Technology Services チームによって開発され、JS Foundation 配下のプロジェクトを経て、2019 年 3 月よ りNode.</description></item><item><title>Multi Cli を作りました [日本語版]</title><link>https://iganari.github.io/blog/2020-02-02_create-multi-cli.ja/</link><pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-02-02_create-multi-cli.ja/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/02/02/193227 Multi Cli を作りました 成果物 https://github.com/iganari/multi-cli
どんなものか (今の所) AWS、Azure、GCP のCLI をコンテナ上で使えるようにします。 これにより、ホストマシンの環境を必要以上に汚すことはありません。 Docker Compose を用いることで、常時起動をより簡易にしています。 docker コマンドの -d でも出来ますが、管理の工数が増えるため、Docker Compose を使用しました。 さくっと CLI を使いたい時に重宝します(多分) CLI を使いたいけど、Cloud Shell を起動するのもめんどいし…な時など!!(あるのか??) 使用方法 Repository を Clone し、docker-compose コマンドで実行します。 cd {Your work directory} git clone https://github.com/iganari/multi-cli.git cd multi-cli docker-compose up -d ### 例 $ docker-compose up -d Creating multi-cli-azure .</description></item><item><title>SRE NEXT に当日メンバーとして参加してきました [日本語版]</title><link>https://iganari.github.io/blog/2020-02-01_meet-srenext.ja/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-02-01_meet-srenext.ja/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/02/01/220234 SRE NEXT に当日メンバーとして参加してきました 2020/01/25 に SRE NEXT というカンファレンスがあり、その当日メンバーとして参加してきました。
感想などを簡潔に書き残しておこうと思います。
なぜ参加したのか インフラエンジニアとして Infrastructure as Code や DevOps などの文面で語られるような、技術・思想が好きなのと、去年の 7 月から新たに SRE チームに所属することとなり、SRE Lounge (https://sre-lounge.connpass.com/) に何回か参加していました。
その時にたまたま参加した回で SRE NEXT の存在を知り、後日当日メンバーの募集があったのですぐに手を上げました。
当日の動きなど わたしの担当は room B に張り付いて、進行などのお手伝いをする謂わば雑用さんでした。
最初こそばたばたしたものの、すぐに慣れてきて当日メンバーと会話も出来、比較的わいわいやれたかと思います。
というか、たまにふらっと持ち場を離れて周遊していたり、(勝手に)イベントの様子をツイートしてました。
受付開始してます!!#srenext pic.twitter.com/TCzkPiwtYu
&amp;mdash; iganari (@iganari_) January 25, 2020 SRE NEXT 2020 始まりました！！#srenext pic.twitter.com/tBfzEP7tvF
&amp;mdash; iganari (@iganari_) January 25, 2020 そこらへんは、 room B の統括をされていた @mtsuka さんの寛大な人柄なとこもあったかと思います。
あと、ヨガが良かったですw
ヨガ体験!!🧘‍♂️🧘‍♀️#srenext pic.</description></item><item><title>Node-RED to LINE Bot Part 1 [日本語版]</title><link>https://iganari.github.io/blog/2020-01-13_nodered-and-linebot-part1.ja/</link><pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-01-13_nodered-and-linebot-part1.ja/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/01/13/212830 Node-REDから LINE Bot に Push してみる Part.1 やりたいこと 下記の記事を参考にして、自分でも Node-RED から LINE Bot に Push メッセージを送ってみようと思います。
Raspberry Pi やローカルPC で動かす Node-RED で Line Bot の Push メッセージを送るメモ https://www.1ft-seabass.jp/memo/2020/01/03/local-node-red-linebot-push-message/ 簡潔に纏めるため、数回に分けて記載します。
Raspberry Pi を準備する 筐体は昔に使っていた Raspberry Pi 3 Model B を使用します。
大掃除してたら Raspberry Pi 3 Model B が出てきたので、お家 IoT ネタに使おうと思います💪 pic.twitter.com/Vnj9waJP9k
&amp;mdash; iganari (@iganari_) December 29, 2019 下記を参考にして microSD を初期化し、Rasbian を microSD に焼いていきます。</description></item><item><title>Node-RED to LINE Bot Part 1 [英語版]</title><link>https://iganari.github.io/blog/2020-01-13_nodered-and-linebot-part1/</link><pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-01-13_nodered-and-linebot-part1/</guid><description>Attention This is an archive of the articles below ;)
https://dev.to/iganari/try-push-line-bot-from-node-red-part-1-52f6 Try push LINE Bot From Node-RED Part.1 Goal Refer to the following article, I try push LINE Bot From Node-RED.
Raspberry Pi やローカルPC で動かす Node-RED で Line Bot の Push メッセージを送るメモ https://www.1ft-seabass.jp/memo/2020/01/03/local-node-red-linebot-push-message/ Split the article into several pieces, because the contents is long.
Set up Raspberry Pi I use raspberry Pi 3 Model B what was used in the past.</description></item><item><title>new PC Cover</title><link>https://iganari.github.io/blog/2020-01-04_new-pc-cover/</link><pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-01-04_new-pc-cover/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/01/04/143949 MacBook Air のハードケースを年毎に取り替えてみる💻 新年になって初めての買い物は下記のノートPC用のハードケースです。
Belk New MacBook Air 2018 13 インチ ケース
https://www.amazon.co.jp/gp/product/B07KXFHBYV なぜ購入したかというと、傷防止のためと勉強会やカンファレンスに参加した際に頂くシールを貼るためです。
本体に直接貼ると、例えば会社からの貸与マシンの場合は会社に返却の際にすべて剥がさないといけなかったり、そもそもシールを貼れるスペースが限られているので定期的にシールを入れ替えるか、シール自体を重ねないといけません。
それはとても悲しいので、ハードケースを付けて年毎に付け替える運用にしてみました。
後からハードケースを見直せば、その年にどんな場所に顔を出したのか、どんな分野に興味があったのかが見れるはずなので面白いかなと思っています。
1年後にこのハードケースがどんな装飾になっているか、今からとても楽しみです:D</description></item><item><title>new year’s resolutions</title><link>https://iganari.github.io/blog/2020-01-03_new-years-resolutions/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-01-03_new-years-resolutions/</guid><description>注意点 この記事は下記の記事のアーカイブです ;)
https://iganari.hatenablog.com/entry/2020/01/03/102216 2019年の振り返りと2020年のこれから 新年あけましておめでとうございます🎍
2019年は公私ともに再出発の年でした。
今の気持ちを忘れぬよう、(抽象的にぼかしますが)素直に書いてみようと思います。
2019年について 2019年に起きた主なこと 引っ越し 転職 持病 再起 2019年は自分にとっては生まれ変わるきっかけを与えてくれた年でした。
引っ越しについて 部屋が一つ増えました。そのおかげで家にコーディング専用の机を置くことが出来、家でコードを書く環境が整いました。
また、アクセス出来る駅が増えました。東京の東側に住んでいるのですが、歩いていける距離に電車の駅が複数あることにより、勉強会の帰り道などで、より早く帰れるようになりました。
転職について それまでの会社も好きだったのですが、訳あって前線からは遠ざかっていたこともあり、自分に自信が持てず保身にばかり走っていた状況でした。
その状況を変えるために、転職をしました。
転職した会社に入って半年経ち、既にいろいろ問題もありますが、チャンスもたくさんある会社なので、ここで出来ることを精一杯やろうと決めています。
持病が発覚 この歳になって、持病が発覚しました。生死に関わるものではなく、普段の生活にも支障は無いのですが、特効薬みたいなものも未だ見つかっていない病気なので、いまは漢方薬を処方してもらい、長くゆっくり直していく予定です。
再起について エモい話ですが、自分の怠慢のせいで、人生において1番大切な人との繋がりを無くしてしまいました。すべて自分のせいですが、当時は相当荒れたし、後悔で夜中に目が覚める事は今でも少なくありません。
ただ、自分が変わらないとなにも変わらないことは火を見るより明らかなので、「その人が信じてくれていた自分を信じて、がむしゃらに行動をし成果を出す」と覚悟を決めました。
何年掛かってもかならず追いついて、今度こそ腹を割って話せるようになると心の奥に誓いを立てました。
2020年について 決意 2019年下半期、とりわけ10月以降は自分のキャパシティを超えたスケジュール密度で技術領域への挑戦を行いました。2ヶ月間走り続けましたが、今でも自分自身に自信が持てずにいます。
ただ、それでも目をかけてくれる周りの方はたくさんいます。なので、その人たちが信じてくれている自分を信じて走り続けます。
いつか、自分自身も自分を信じてあげれるようになれるよう走り続けます。
また、周りを巻き込むことが出来る能力や、周りを巻き込みたいと思っている人を1番に支援することが出来る能力も合わせて培っていきたいと思っています。
具体的な技術領域(希望を含む) Infrastructure as Code Terraform, Ansible Programming Python, Golang Cloud GCP, Azure OSS Kubernetes, Docker IoT Node-RED, Noodl VUI LINE Clova インフラエンジニア出身であり今は SRE に身を置いているので、そのバックグラウンドを元に Infrastructure as Code やサービスの全体設計を俯瞰して考え・話すことが出来るようなりたいと考えています。</description></item><item><title>First Commit</title><link>https://iganari.github.io/blog/2020-01-01_first-commit/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://iganari.github.io/blog/2020-01-01_first-commit/</guid><description>ブログを引越しました はじめまして はじめまして。 iganari です :)
このサイトは私が日々自ら検証し、出来たり出来なかったりした技術的な内容を主に書くブログです。
また、他のブログサイトに書いた自分の記事の内容をアーカイブしておくためのブログでもあります。
今までは他のサイトを構築・運用していましたが、2020年にこのサイトにリプレースしました。
このサイトを通じて、読んで頂いた方に何かしらの気付きがあれば嬉しいです! ;)
サイトの構成 このサイトは以下の構成・仕組みとなっています。
種類 使用した技術 ホスティング GitHub Pages Web framework Hugo デプロイ方法 GitHub Actions ソースコードはこちらになります。
https://github.com/iganari/iganari.github.io まとめ これからもよろしくお願い致します!
Have fun ! :D</description></item></channel></rss>